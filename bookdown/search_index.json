[["index.html", "Network Analysis: Integrating Social Network Theory, Method, and Application with R 1 Introduction 1.1 How to Read the Book 1.2 Citations and Use 1.3 Updates and Feedback 1.4 Acknowledgments", " Network Analysis: Integrating Social Network Theory, Method, and Application with R Craig Rawlings, Jeffrey A. Smith, James Moody, and Daniel McFarland 1 Introduction Welcome to the website for Network Analysis: Integrating Social Network Theory, Method, and Application with R. Here you will find the R tutorials that accompany the printed manuscript, which is available through Cambridge University Press. The printed manuscript offers substantive, theoretical and methodological discussions on how to conceptually conduct network analysis. The printed book thus offers the motivation and logic behind asking research questions from a network perspective. These tutorials serve as the practical counterpart, offering detailed examples on how to manipulate, visualize, summarize and analyze network data in R. The tutorials are motivated by substantive problems and include in-depth examples and interpretation. Many, but not all, of the examples are based on adolescents in school, as they serve as a familiar case study useful for drawing out larger, more general themes. 1.1 How to Read the Book The material on this website is meant to be paired with the printed manuscript. It is not an online version of the printed book. A reader would ideally read a chapter in the manuscript and then walk through the associated online R tutorials step-by-step. Readers may choose to go through each R tutorial in order or opt to cover specific topics of interest, depending on the goals and experience of the reader. Each tutorial is self-contained, so that more experienced readers could choose to cover the tutorials out of order. For those readers not strictly following the published book, it is important to remember that the R tutorials are numbered to coincide exactly with the chapters in the published manuscript. The book covers a wide range of topics related to network analysis. These include, but are not limited to: Data Management Missing Data Visualization Ego Networks Dyads and Triads Centrality Positions and Roles Affiliations and Duality Networks and Culture Statistical Network Models Diffusion Social Influence Note that there are often multiple tutorials associated with a given topic. For example, Chapter 3 covers the basics of data management for network data in R, with one tutorial (3.1) covering cross sectional network data and another (3.2) covering longitudinal network data. 1.2 Citations and Use You can cite the tutorials on this website as: \"\". The online R tutorials, like the printed manuscript, should not be reproduced without the written permission of Cambridge University Press &amp; Assessment (copyright © Craig M. Rawlings, Jeffrey A. Smith, James Moody, and Daniel A. McFarland, 2023). The tutorials are, however, made freely available through this site. 1.3 Updates and Feedback This book was built using R version 4.3.0 on June 01, 2023. The authors are committed to keeping these chapters as up to date as possible, especially when there are major updates to key packages. It is also possible that future versions of this online book will include additional tutorials on topics not currently covered. If you find errors or breaks in any of the code you can note them here: https://github.com/JeffreyAlanSmith/Integrated_Network_Science/issues or contact one of the authors directly. You can also find additional functions and data sets used throughout this book on the following github site: https://github.com/JeffreyAlanSmith/Integrated_Network_Science. 1.4 Acknowledgments There are many people we would like to thank for providing feedback and suggestions on these tutorials. Special thanks goes to Robin Gauthier and Sela Harcey for their insightful comments and support, as well as graduate students Gabriel Varela, Tom Wolff, and Joe Quinn for reviews and beta testing. These tutorials have also been taught at various network analysis classes at Duke, Stanford and UNL. The advice and suggestions of our students have greatly strengthened the material presented here. Many of the R labs presented in this textbook were built off prior versions developed at Stanford University by Daniel McFarland, Solomon Messing, Michael Nowak, Sean J. Westwood, and Sanne Smith. Chapter 5’s lab for NDTV drew on Skye Bender-deMoll’s materials; Chapter 12 on LDA/CA from Love Börjeson and Daniel McFarland; Chapter 13 concerning “ERGM” and “relevant” drew on Carter Butts’ materials; Chapter 15 on SIENA/SAOM drew on ICS materials. Finally, a great many resources from the Duke Network Analysis Center (DNAC) helped us in formulating elements in many of the labs. For example, Chapter 4 on missing data imputation drew on DNAC/James Moody and Jeffrey A. Smith’s work, as did Chapter 14 on diffusion. We are grateful to these institutions and individuals for sharing code and helping us formulate applications for each chapter’s theories. "],["basic-introduction-to-r.html", "2 Basic Introduction to R 2.1 Preliminaries 2.2 Packages", " 2 Basic Introduction to R This tutorial offers an introduction to the basics of R. R is a general platform for performing statistical and programming tasks. R offers a wide variety of network functionality, making it possible to do everything from simple network construction and graphing to sophisticated statistical models, all under one platform. Through a series of R tutorials, we will offer R code and examples for each major topic covered in the main text. In this tutorial, we offer a very brief overview of R and R packages, just enough to make sure that everyone can run and follow the tutorials that follow. Note that we do not offer a dedicated tutorial on R programming. All tutorials (except this one) are motivated by a problem related to network analysis. It will be useful to have some basic familiarity with R and its syntax (or be willing to learn as we go along!) but this is not strictly necessary. Each tutorial includes both R code and results, making it easier for readers to follow along, even without detailed knowledge of R. Readers interested in learning R in more depth should consider one of the many introductory R textbooks. 2.1 Preliminaries The first step is to gain access to R, which is free and available on the R website: http://cran.r-project.org/. Simply go to the R website, select the appropriate location and operating system, and follow the instructions to download the base distribution of R. RStudio (https://rstudio.com/) offers a user friendly environment to run R and is recommended. Once R is opened we can begin to run commands. R commands can be run directly from the command line, from the R editor or from a text editor separate from R. For example, the following does a bit of simple math: 5 + 5 ## [1] 10 As another example, here we sum up a series of numbers using a sum function. sum(5, 5, 4) ## [1] 14 R offers detailed help files for each function. To access help, type ?name_of_function. For example, for help on the sum function, run: ?sum All lines proceeded by a # are comments and will not run. For example: # This is a comment. R will not recognize this as a command. 2.2 Packages The functionality of R is extended by loading packages that researchers have contributed to the R community. Packages are sets of useful functions that accomplish a set of tasks, such as graphing a network. In this book we will primarily make use of: igraph, sna, network, ergm, tergm, and RSiena. igraph, network and sna perform similar tasks related to network construction, graphing and network measurement. sna and network work in tandem while igraph is a fairly stand alone package. Note that igraph and sna/network construct networks in very different manners and there is little overlap in syntax. We will present the code for performing different calculations and tasks in both igraph and sna/network, where appropriate. The other packages, like ergm, tergm, and RSiena, estimate more advanced statistical models and we will cover them later in the book. Each package of interest must be installed and loaded before it can be used. The packages will not be immediately available when R is opened. A package only has to be installed once on a computer, but the package will have to be loaded every time R is restarted. To install all of the packages used in this book, run the following: source(&quot;https://github.com/JeffreyAlanSmith/Integrated_Network_Science/raw/master/R/setup.R&quot;) It is also possible to install each package individually as we need them. For example, to install igraph, sna, and network, we would do: install.packages(&quot;igraph&quot;) install.packages(&quot;sna&quot;) install.packages(&quot;network&quot;) Now that we have our packages successfully installed, we can go ahead and load them into R. Here we will load the network package as an example. We can use of all the functions available in that package once it is loaded into R. We load packages by using a library command. The input is the name of the package, not in quotes. library(network) We can look up all of the functions within a package by using a help command. For example, let’s look at the functions available in the network package. help(package = network) Note that the package argument is necessary to look up all of the functions. We can also detach a package if we no longer want it loaded. This is sometimes useful if two packages do not play well together. Here we will use a detach command. detach(package:network) For simplicity, we will assume that the reader has restarted R at the beginning of each tutorial. This will ensure that the code will run without any complications. We will now turn to the basics of data management and network construction in R, covered in Chapter 3. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
